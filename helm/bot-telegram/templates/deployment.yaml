apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bot-telegram.fullname" . }}
  labels:
    {{- include "bot-telegram.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bot-telegram.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bot-telegram.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bot-telegram.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: API_URI
              value: "{{ .Values.api.uri }}"
            - name: API_ADMIN_URI
              value: "{{ .Values.api.admin.uri }}"
            - name: API_MESSAGES_URI
              value: "{{ .Values.api.messages.uri }}"
            - name: API_WRITER_URI
              value: "{{ .Values.api.writer.uri }}"
            {{- range .Values.ingress.hosts }}
            - name: API_TELEGRAM_WEBHOOK_HOST
              value: {{ .host }}
            {{- range .paths }}
            - name: API_TELEGRAM_WEBHOOK_PATH
              value: {{ .path }}
            {{- end }}
            {{- end }}
            - name: API_TELEGRAM_WEBHOOK_PORT
              value: "{{ .Values.service.port }}"
            - name: API_TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: bot-telegram-tokens
                  key: telegram
              value: "{{ .Values.api.telegram.token }}"
            - name: API_PAYMENT_PROVIDER_TOKEN
              value: "{{ .Values.api.payment.provider.token }}"
            - name: LOG_LEVEL
              value: "{{ .Values.log.level }}"
            - name: PAYMENT_BACKOFF_FACTOR
              value: "{{ .Values.payment.backoff.factor }}"
            - name: PAYMENT_BACKOFF_INIT
              value: "{{ .Values.payment.backoff.init }}"
            - name: PAYMENT_BACKOFF_LIMIT_TOTAL
              value: "{{ .Values.payment.backoff.limitTotal }}"
            - name: PAYMENT_CURRENCY_CODE
              value: "{{ .Values.payment.currency.code }}"
            - name: PAYMENT_CURRENCY_SUB_FACTOR
              value: "{{ .Values.payment.currency.subFactor }}"
            - name: PAYMENT_PRE_CHECKOUT_TIMEOUT
              value: "{{ .Values.payment.preCheckout.timeout }}"
            - name: PAYMENT_PRICE_MESSAGE_PUBLISHING_DAILY_LIMIT
              value: "{{ .Values.payment.price.messagePublishing.dailyLimit }}"
            - name: PAYMENT_PRICE_MESSAGE_PUBLISHING_EXTRA
              value: "{{ .Values.payment.price.messagePublishing.extra }}"
            - name: PAYMENT_PRICE_SUBSCRIPTION_COUNT_LIMIT
              value: "{{ .Values.payment.price.subscription.countLimit }}"
            - name: PAYMENT_PRICE_SUBSCRIPTION_EXTENSION
              value: "{{ .Values.payment.price.subscription.extension }}"
            - name: PAYMENT_PROVIDER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: bot-telegram-tokens
                  key: payment
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: "/healthz"
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: server-cert
              mountPath: "/etc/server-cert"
              readOnly: true
      volumes:
        - name: server-cert
          secret:
            secretName: secret-bot-telegram-tls-server
            items:
              - key: tls.crt
                path: tls.crt
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
