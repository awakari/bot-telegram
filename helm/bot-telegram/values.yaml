# Default values for bot-telegram.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/awakari/bot-telegram
  pullPolicy: Always
  tag: "latest"
imagePullSecrets:
  - name: github-registry
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  grpc:
    header:
      tlsClientDn: "X-Awakari-Group-Id"
    timeout:
      body: "86400s"
      read: "86400s"
      send: "86400s"
  http:
    header:
      tlsClientDn: "X-Awakari-Group-Id"
  hosts:
    - host: bot-telegram.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: secret-bot-telegram-tls-server
      hosts:
        - bot-telegram.local

resources:
  requests:
    cpu: 2m
    memory: 16Mi
  limits:
    cpu: 1000m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationValue: 1000m
  targetMemoryUtilizationValue: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

api:
  admin:
    uri: "api:56789"
  messages:
    uri: "messages:50051"
  writer:
    uri: "resolver:50051"
  uri: "api:50051"
  cert: server-cert
  payment:
    provider:
      token: test
  telegram:
    support:
      chat:
        id: 0
    token: telegram-bot-token
chats:
  # Database related configuration.
  db:
    protocol: mongodb
    hostname: "mongodb:27017"
    # Database name to use.
    name: bot-telegram
    username: "root"
    password:
      raw: "" # used if limits.db.password.secret.enabled is false
      secret:
        enabled: true
        name: "mongodb"
        key: "mongodb-root-password"
    table:
      # Database table name to use.
      name: chats
    tls:
      enabled: false
      insecure: false
log:
  # https://pkg.go.dev/golang.org/x/exp/slog#Level
  level: -4
payment:
  backoff:
    init: 100ms
    factor: 2
    limitTotal: 15m
  currency:
    code: EUR
    subFactor: 100
  preCheckout:
    timeout: 10s
  price:
    messagePublishing:
      dailyLimit: 0.1
      extra: 1
    subscription:
      countLimit: 0.1
      extension: 0.1
  provider:
    token: payment-provider-token
